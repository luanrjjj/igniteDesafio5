{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/luan/Documentos/igniteDesafio 5/src/components/CardList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Card } from './Card';\nexport function CardList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var cards = _ref.cards;\n\n  // TODO MODAL USEDISCLOSURE\n  var _useState = useState(''),\n      urlState = _useState[0],\n      setUrlSate = _useState[1]; // TODO SELECTED IMAGE URL STATE\n  // TODO FUNCTION HANDLE VIEW IMAGE\n\n\n  function handleViewImage(url) {\n    setUrlSate(url);\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: cards === null || cards === void 0 ? void 0 : cards.map(function (card) {\n      /*#__PURE__*/\n      _jsxDEV(Card, {\n        data: card,\n        viewImage: handleViewImage(card.url)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false);\n}\n\n_s(CardList, \"tZTuscAJ+Ax3lrNd95IYAdMRLjw=\");\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/home/luan/Documentos/igniteDesafio 5/src/components/CardList.tsx"],"names":["useState","Card","CardList","cards","urlState","setUrlSate","handleViewImage","url","map","card"],"mappings":";;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,QAArB;AAeA,OAAO,SAASC,QAAT,OAAsD;AAAA;;AAAA;;AAAA,MAAlCC,KAAkC,QAAlCA,KAAkC;;AAC3D;AAD2D,kBAI7BH,QAAQ,CAAC,EAAD,CAJqB;AAAA,MAIpDI,QAJoD;AAAA,MAI3CC,UAJ2C,iBAK3D;AAEA;;;AAEA,WAASC,eAAT,CAA0BC,GAA1B,EAA+B;AAC7BF,IAAAA,UAAU,CAAEE,GAAF,CAAV;AAEA;AACD;;AAED,sBACE;AAAA,cACGJ,KADH,aACGA,KADH,uBACGA,KAAK,CAAEK,GAAP,CAAW,UAAAC,IAAI,EAAI;AAClB;AAAA,cAAC,IAAD;AAAM,QAAA,IAAI,EAAGA,IAAb;AAAmB,QAAA,SAAS,EAAIH,eAAe,CAACG,IAAI,CAACF,GAAN;AAA/C;AAAA;AAAA;AAAA;AAAA;AAA8D,KAD/D;AADH,mBADF;AASD;;GAxBeL,Q;;KAAAA,Q","sourcesContent":["import { SimpleGrid, useDisclosure } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { Card } from './Card';\nimport { ModalViewImage } from './Modal/ViewImage';\n\ninterface Card {\n  title: string;\n  description: string;\n  url: string;\n  ts: number;\n  id: string;\n}\n\ninterface CardsProps {\n  cards: Card[];\n}\n\nexport function CardList({ cards }: CardsProps): JSX.Element {\n  // TODO MODAL USEDISCLOSURE\n\n\n  const [urlState,setUrlSate] = useState('')\n  // TODO SELECTED IMAGE URL STATE\n\n  // TODO FUNCTION HANDLE VIEW IMAGE\n\n  function handleViewImage (url) {\n    setUrlSate (url)\n\n    return\n  }\n\n  return (\n    <>\n      {cards?.map(card => {\n        <Card data ={card} viewImage = {handleViewImage(card.url)} />}\n      )}\n\n      {/* TODO MODALVIEWIMAGE */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}