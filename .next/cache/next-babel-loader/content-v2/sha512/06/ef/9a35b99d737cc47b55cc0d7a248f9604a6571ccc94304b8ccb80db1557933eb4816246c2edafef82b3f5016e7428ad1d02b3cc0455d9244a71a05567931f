{"ast":null,"code":"import _regeneratorRuntime from \"/home/luan/Documentos/igniteDesafio 5/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/luan/Documentos/igniteDesafio 5/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/luan/Documentos/igniteDesafio 5/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/luan/Documentos/igniteDesafio 5/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\nimport axios from 'axios';\nexport default function Home() {\n  _s();\n\n  function fetchProjects(_x) {\n    return _fetchProjects.apply(this, arguments);\n  }\n\n  function _fetchProjects() {\n    _fetchProjects = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var _ref$pageParam, pageParam, _data, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$pageParam = _ref.pageParam, pageParam = _ref$pageParam === void 0 ? null : _ref$pageParam;\n\n              if (!pageParam) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return axios.get('/api/images', {\n                params: {\n                  after: pageParam\n                }\n              });\n\n            case 4:\n              _data = _context.sent;\n              return _context.abrupt(\"return\", _data);\n\n            case 6:\n              _context.next = 8;\n              return axios.get('/api/images');\n\n            case 8:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchProjects.apply(this, arguments);\n  }\n\n  var _useInfiniteQuery = useInfiniteQuery('images', fetchProjects, {\n    getNextPageParam: function getNextPageParam(result) {\n      return result.after ? result.after : null;\n    }\n  } // TODO AXIOS REQUEST WITH PARAM\n  // TODO GET AND RETURN NEXT PAGE PARAM\n  ),\n      data = _useInfiniteQuery.data,\n      isLoading = _useInfiniteQuery.isLoading,\n      isError = _useInfiniteQuery.isError,\n      isFetchingNextPage = _useInfiniteQuery.isFetchingNextPage,\n      fetchNextPage = _useInfiniteQuery.fetchNextPage,\n      hasNextPage = _useInfiniteQuery.hasNextPage;\n\n  var formattedData = useMemo(function () {\n    var formattedDataTotal = [];\n    var dataPages = data === null || data === void 0 ? void 0 : data.pages; // TODO FORMAT AND FLAT DATA ARRAY\n\n    dataPages === null || dataPages === void 0 ? void 0 : dataPages.map(function (page) {\n      formattedDataTotal = [].concat(_toConsumableArray(formattedDataTotal), [page.data]); // eslint-disable-next-line no-useless-return\n\n      return;\n    });\n    return formattedDataTotal;\n  }, [data]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  } // TODO RENDER ERROR SCREEN\n\n\n  console.log(5000, data);\n  console.log(5001, formattedData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxW: 1120,\n      px: 20,\n      mx: \"auto\",\n      my: 20,\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        cards: formattedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"GuuWGVmqfHme7mRc/ergBOrsbkk=\", false, function () {\n  return [useInfiniteQuery];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/luan/Documentos/igniteDesafio 5/src/pages/index.tsx"],"names":["Box","useMemo","useInfiniteQuery","Header","CardList","Loading","Error","axios","Home","fetchProjects","pageParam","get","params","after","data","getNextPageParam","result","isLoading","isError","isFetchingNextPage","fetchNextPage","hasNextPage","formattedData","formattedDataTotal","dataPages","pages","map","page","console","log"],"mappings":";;;;;;;;;AAAA,SAAiBA,GAAjB,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAkBA,eAAe,SAASC,IAAT,GAA6B;AAAA;;AAAA,WAE3BC,aAF2B;AAAA;AAAA;;AAAA;AAAA,8EAE1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAgCC,SAAhC,EAAgCA,SAAhC,+BAA4C,IAA5C;;AAAA,mBACMA,SADN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEmCH,KAAK,CAACI,GAAN,CAAU,aAAV,EAAyB;AACvDC,gBAAAA,MAAM,EAAE;AACRC,kBAAAA,KAAK,EAACH;AADE;AAD+C,eAAzB,CAFnC;;AAAA;AAESI,cAAAA,KAFT;AAAA,+CAQWA,KARX;;AAAA;AAAA;AAAA,qBAUkCP,KAAK,CAACI,GAAN,CAAU,aAAV,CAVlC;;AAAA;AAUQG,cAAAA,IAVR;AAAA,+CAYSA,IAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAF0C;AAAA;AAAA;;AAAA,0BAyBtCZ,gBAAgB,CAClB,QADkB,EACRO,aADQ,EACO;AAACM,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAAWA,MAAM,CAACH,KAAP,GAAaG,MAAM,CAACH,KAApB,GAA0B,IAArC;AAAA;AAAnB,GADP,CAElB;AAEA;AAJkB,GAzBsB;AAAA,MAmBxCC,IAnBwC,qBAmBxCA,IAnBwC;AAAA,MAoBxCG,SApBwC,qBAoBxCA,SApBwC;AAAA,MAqBxCC,OArBwC,qBAqBxCA,OArBwC;AAAA,MAsBxCC,kBAtBwC,qBAsBxCA,kBAtBwC;AAAA,MAuBxCC,aAvBwC,qBAuBxCA,aAvBwC;AAAA,MAwBxCC,WAxBwC,qBAwBxCA,WAxBwC;;AAgC1C,MAAMC,aAAa,GAAGrB,OAAO,CAAC,YAAM;AAClC,QAAIsB,kBAAkB,GAAG,EAAzB;AACC,QAAMC,SAAS,GAAIV,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEW,KAAzB,CAFiC,CAGlC;;AAGAD,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,GAAX,CAAe,UAAAC,IAAI,EAAI;AACrBJ,MAAAA,kBAAkB,gCAAOA,kBAAP,IAA0BI,IAAI,CAACb,IAA/B,EAAlB,CADqB,CAErB;;AACA;AACD,KAJD;AAOA,WAAOS,kBAAP;AACD,GAd4B,EAc1B,CAACT,IAAD,CAd0B,CAA7B;;AAgBA,MAAGG,SAAH,EAAc;AACZ,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAGC,OAAH,EAAY;AACV,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAtDyC,CAwD1C;;;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBf,IAAjB;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBP,aAAjB;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,IAAX;AAAiB,MAAA,EAAE,EAAE,EAArB;AAAyB,MAAA,EAAE,EAAC,MAA5B;AAAmC,MAAA,EAAE,EAAE,EAAvC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAYD;;GAvEuBd,I;UAyBlBN,gB;;;KAzBkBM,I","sourcesContent":["import { Button, Box } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\n\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { api } from '../services/api';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\nimport axios from 'axios';\n\n\ninterface Card {\ntitle:string;\ndescription:string;\nurl:string;\nts:number;\nid:string\n}\n\n\ninterface ResponseData {\ndata:Card[];\nafter:string|null;\n}\n\n\nexport default function Home(): JSX.Element {\n\n  async function fetchProjects ({ pageParam = null})  {\n    if (pageParam) {\n     const data:ResponseData = await axios.get('/api/images', {\n       params: {\n       after:pageParam\n       },\n      })\n\n      return data\n    }\n    const data:ResponseData = await axios.get('/api/images')\n\n    return data\n  }\n\n\n  const {\n    data,\n    isLoading,\n    isError,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery(\n    'images', fetchProjects, {getNextPageParam: (result)=> result.after?result.after:null}\n    // TODO AXIOS REQUEST WITH PARAM\n    ,\n    // TODO GET AND RETURN NEXT PAGE PARAM\n  );\n  \n  const formattedData = useMemo(() => {\n    let formattedDataTotal = [];\n     const dataPages =  data?.pages\n    // TODO FORMAT AND FLAT DATA ARRAY\n\n    \n    dataPages?.map(page => {\n      formattedDataTotal = [...formattedDataTotal,page.data];\n      // eslint-disable-next-line no-useless-return\n      return;\n    });\n  \n\n    return formattedDataTotal;\n  }, [data]);\n\n  if(isLoading) {\n    return <Loading/>\n  }\n\n  if(isError) {\n    return <Error/>\n  }\n\n  // TODO RENDER ERROR SCREEN\n  console.log(5000,data)\n  console.log(5001,formattedData)\n  return (\n    <>\n      <Header />\n\n      <Box maxW={1120} px={20} mx=\"auto\" my={20}>\n        <CardList cards={formattedData} />\n        {/* TODO RENDER LOAD MORE BUTTON IF DATA HAS NEXT PAGE */}\n      </Box>\n\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}