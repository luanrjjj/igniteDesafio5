{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/luan/Documentos/igniteDesafio 5/src/pages/index.tsx\";\nimport { Box } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\nimport axios from 'axios';\nexport default function Home() {\n  async function fetchProjects({\n    pageParam = null\n  }) {\n    if (pageParam) {\n      const data = await axios.get('/api/images', {\n        params: {\n          after: pageParam\n        }\n      });\n      return data;\n    }\n\n    const data = await axios.get('/api/images');\n    return data;\n  }\n\n  console.log(5000, data);\n  const {\n    data,\n    isLoading,\n    isError,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage\n  } = useInfiniteQuery('images', fetchProjects, {\n    getNextPageParam: result => result.after ? result.after : null\n  } // TODO AXIOS REQUEST WITH PARAM\n  // TODO GET AND RETURN NEXT PAGE PARAM\n  );\n  const formattedData = useMemo(() => {\n    let formattedDataTotal = [];\n    const dataPages = data === null || data === void 0 ? void 0 : data.pages; // TODO FORMAT AND FLAT DATA ARRAY\n\n    dataPages === null || dataPages === void 0 ? void 0 : dataPages.map(page => {\n      formattedDataTotal = [...formattedDataTotal, page.data]; // eslint-disable-next-line no-useless-return\n\n      return;\n    });\n    return formattedDataTotal;\n  }, [data]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  } // TODO RENDER ERROR SCREEN\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      maxW: 1120,\n      px: 20,\n      mx: \"auto\",\n      my: 20,\n      children: /*#__PURE__*/_jsxDEV(CardList, {\n        cards: formattedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/luan/Documentos/igniteDesafio 5/src/pages/index.tsx"],"names":["Box","useMemo","useInfiniteQuery","Header","CardList","Loading","Error","axios","Home","fetchProjects","pageParam","data","get","params","after","console","log","isLoading","isError","isFetchingNextPage","fetchNextPage","hasNextPage","getNextPageParam","result","formattedData","formattedDataTotal","dataPages","pages","map","page"],"mappings":";;;AAAA,SAAiBA,GAAjB,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAkBA,eAAe,SAASC,IAAT,GAA6B;AAE1C,iBAAeC,aAAf,CAA8B;AAAEC,IAAAA,SAAS,GAAG;AAAd,GAA9B,EAAoD;AAClD,QAAIA,SAAJ,EAAe;AACd,YAAMC,IAAiB,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,EAAyB;AACvDC,QAAAA,MAAM,EAAE;AACRC,UAAAA,KAAK,EAACJ;AADE;AAD+C,OAAzB,CAAhC;AAMC,aAAOC,IAAP;AACD;;AACD,UAAMA,IAAiB,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,aAAV,CAAhC;AAEA,WAAOD,IAAP;AACD;;AACHI,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBL,IAAjB;AACE,QAAM;AACJA,IAAAA,IADI;AAEJM,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA,aALI;AAMJC,IAAAA;AANI,MAOFnB,gBAAgB,CAClB,QADkB,EACRO,aADQ,EACO;AAACa,IAAAA,gBAAgB,EAAGC,MAAD,IAAWA,MAAM,CAACT,KAAP,GAAaS,MAAM,CAACT,KAApB,GAA0B;AAAxD,GADP,CAElB;AAEA;AAJkB,GAPpB;AAcA,QAAMU,aAAa,GAAGvB,OAAO,CAAC,MAAM;AAClC,QAAIwB,kBAAkB,GAAG,EAAzB;AACC,UAAMC,SAAS,GAAIf,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEgB,KAAzB,CAFiC,CAGlC;;AAGAD,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEE,GAAX,CAAeC,IAAI,IAAI;AACrBJ,MAAAA,kBAAkB,GAAG,CAAC,GAAGA,kBAAJ,EAAuBI,IAAI,CAAClB,IAA5B,CAArB,CADqB,CAErB;;AACA;AACD,KAJD;AAOA,WAAOc,kBAAP;AACD,GAd4B,EAc1B,CAACd,IAAD,CAd0B,CAA7B;;AAgBA,MAAGM,SAAH,EAAc;AACZ,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAGC,OAAH,EAAY;AACV,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GArDyC,CAuD1C;;;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAE,IAAX;AAAiB,MAAA,EAAE,EAAE,EAArB;AAAyB,MAAA,EAAE,EAAC,MAA5B;AAAmC,MAAA,EAAE,EAAE,EAAvC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEM;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAYD","sourcesContent":["import { Button, Box } from '@chakra-ui/react';\nimport { useMemo } from 'react';\nimport { useInfiniteQuery } from 'react-query';\n\nimport { Header } from '../components/Header';\nimport { CardList } from '../components/CardList';\nimport { api } from '../services/api';\nimport { Loading } from '../components/Loading';\nimport { Error } from '../components/Error';\nimport axios from 'axios';\n\n\ninterface Card {\ntitle:string;\ndescription:string;\nurl:string;\nts:number;\nid:string\n}\n\n\ninterface ResponseData {\ndata:Card[];\nafter:string|null;\n}\n\n\nexport default function Home(): JSX.Element {\n\n  async function fetchProjects ({ pageParam = null})  {\n    if (pageParam) {\n     const data:ResponseData = await axios.get('/api/images', {\n       params: {\n       after:pageParam\n       },\n      })\n\n      return data\n    }\n    const data:ResponseData = await axios.get('/api/images')\n\n    return data\n  }\nconsole.log(5000,data)\n  const {\n    data,\n    isLoading,\n    isError,\n    isFetchingNextPage,\n    fetchNextPage,\n    hasNextPage,\n  } = useInfiniteQuery(\n    'images', fetchProjects, {getNextPageParam: (result)=> result.after?result.after:null}\n    // TODO AXIOS REQUEST WITH PARAM\n    ,\n    // TODO GET AND RETURN NEXT PAGE PARAM\n  );\n  \n  const formattedData = useMemo(() => {\n    let formattedDataTotal = [];\n     const dataPages =  data?.pages\n    // TODO FORMAT AND FLAT DATA ARRAY\n\n    \n    dataPages?.map(page => {\n      formattedDataTotal = [...formattedDataTotal,page.data];\n      // eslint-disable-next-line no-useless-return\n      return;\n    });\n  \n\n    return formattedDataTotal;\n  }, [data]);\n\n  if(isLoading) {\n    return <Loading/>\n  }\n\n  if(isError) {\n    return <Error/>\n  }\n\n  // TODO RENDER ERROR SCREEN\n  \n  return (\n    <>\n      <Header />\n\n      <Box maxW={1120} px={20} mx=\"auto\" my={20}>\n        <CardList cards={formattedData} />\n        {/* TODO RENDER LOAD MORE BUTTON IF DATA HAS NEXT PAGE */}\n      </Box>\n\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}